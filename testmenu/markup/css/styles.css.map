{"version":3,"sources":["_reset.scss","styles.css","_vars.scss","_header.scss","_include-media.scss","_banner.scss","_buttons.scss"],"names":[],"mappings":"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","file":"styles.css","sourcesContent":["html {\n\tfont-size: 10px;\n}\n\nbody {\n\tmargin: 0;\n\tmin-width: 320px;\n\tbackground: $body-bg;\n\tcolor: $black;\n\tfont: $font-weight-base #{$font-size-base}/ $line-height-base $font-family-base;\n\tfont-smoothing: antialiased;\n\ttext-rendering: optimizeLegibility;\n\t-webkit-font-smoothing: antialiased;\n\t-moz-osx-font-smoothing: grayscale;\n\tdisplay: flex;\n\tflex-direction: column;\n\n\t&.mobile-menu-opened {\n\t\toverflow: hidden;\n\t}\n}\n\na {\n\ttext-decoration: none;\n\tcolor: $links-color-base;\n\ttransition: $transition;\n}\n\na:hover {\n\ttext-decoration: underline;\n}\n\n*,\n*::before,\n*::after {\n\t-webkit-box-sizing: border-box;\n\tbox-sizing: border-box;\n}\n\nbutton,\ninput[type=\"search\"],\ninput[type=\"button\"],\ninput[type=\"reset\"],\ninput[type=\"submit\"] {\n\t-webkit-appearance: none;\n\tcursor: pointer;\n\ttransition: $transition;\n}\n\nbutton::-moz-focus-inner,\ninput[type=\"reset\"]::-moz-focus-inner,\ninput[type=\"button\"]::-moz-focus-inner,\ninput[type=\"submit\"]::-moz-focus-inner {\n\tborder: none;\n\tpadding: 0;\n}\n\n.wrapper {\n\tmin-height: 100vh;\n\tmin-height: calc(var(--vh, 1vh) * 100);\n\tdisplay: flex;\n\tflex-direction: column;\n}\n\n#main {\n\tdisplay: flex;\n\tflex-direction: column;\n\tflex-grow: 1;\n}\n\nfigure {\n\tmargin: 0;\n}\n\n.container {\n\tmax-width: 112rem;\n\tmargin: auto;\n\tpadding: 0 2rem;\n}\n\n.sr-only {\n\tposition: absolute;\n\twidth: 1px;\n\theight: 1px;\n\tpadding: 0;\n\toverflow: hidden;\n\tclip: rect(0, 0, 0, 0);\n\twhite-space: nowrap;\n\tborder: 0;\n}\n","html {\n\tfont-size: 10px;\n}\n\nbody {\n\tmargin: 0;\n\tmin-width: 320px;\n\tbackground: #fff;\n\tcolor: #000;\n\tfont: 400 1.6rem/1.42857143 \"Open Sans\", sans-serif;\n\tfont-smoothing: antialiased;\n\ttext-rendering: optimizeLegibility;\n\t-webkit-font-smoothing: antialiased;\n\t-moz-osx-font-smoothing: grayscale;\n\tdisplay: flex;\n\tflex-direction: column;\n}\nbody.mobile-menu-opened {\n\toverflow: hidden;\n}\n\na {\n\ttext-decoration: none;\n\tcolor: inherit;\n\ttransition: all 0.3s ease;\n}\n\na:hover {\n\ttext-decoration: underline;\n}\n\n*,\n*::before,\n*::after {\n\t-webkit-box-sizing: border-box;\n\tbox-sizing: border-box;\n}\n\nbutton,\ninput[type=search],\ninput[type=button],\ninput[type=reset],\ninput[type=submit] {\n\t-webkit-appearance: none;\n\tcursor: pointer;\n\ttransition: all 0.3s ease;\n}\n\nbutton::-moz-focus-inner,\ninput[type=reset]::-moz-focus-inner,\ninput[type=button]::-moz-focus-inner,\ninput[type=submit]::-moz-focus-inner {\n\tborder: none;\n\tpadding: 0;\n}\n\n.wrapper {\n\tmin-height: 100vh;\n\tmin-height: calc(var(--vh, 1vh) * 100);\n\tdisplay: flex;\n\tflex-direction: column;\n}\n\n#main {\n\tdisplay: flex;\n\tflex-direction: column;\n\tflex-grow: 1;\n}\n\nfigure {\n\tmargin: 0;\n}\n\n.container {\n\tmax-width: 112rem;\n\tmargin: auto;\n\tpadding: 0 2rem;\n}\n\n.sr-only {\n\tposition: absolute;\n\twidth: 1px;\n\theight: 1px;\n\tpadding: 0;\n\toverflow: hidden;\n\tclip: rect(0, 0, 0, 0);\n\twhite-space: nowrap;\n\tborder: 0;\n}\n\n/* header */\n.header {\n\tbackground: #034da1;\n}\n\n.main-nav {\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: space-between;\n}\n@media (min-width: 768px) {\n\t.main-nav .left-side {\n\t\twidth: 50%;\n\t}\n}\n@media (min-width: 768px) {\n\t.main-nav .right-side {\n\t\tdisplay: flex;\n\t\tjustify-content: flex-end;\n\t\twidth: 50%;\n\t}\n}\n.main-nav .profile {\n\tmargin: 0;\n\tpadding: 0;\n\tlist-style: none;\n\tdisplay: flex;\n\tcolor: #fff;\n}\n.main-nav .profile a {\n\tdisplay: block;\n\tpadding: 1rem;\n\ttext-decoration: none;\n}\n.main-nav .main-menu {\n\tmargin: 0;\n\tpadding: 0;\n\tlist-style: none;\n\tdisplay: flex;\n\tcolor: #fff;\n\ttransition: all 0.3s ease;\n}\n@media (min-width: 992px) {\n\t.main-nav .main-menu {\n\t\twidth: 70%;\n\t\tjustify-content: space-between;\n\t}\n}\n@media (max-width: 766px) {\n\t.main-nav .main-menu {\n\t\tposition: fixed;\n\t\ttop: 4.2rem;\n\t\tpadding-top: 4rem;\n\t\tleft: 0;\n\t\twidth: 100%;\n\t\theight: calc(100% - 4.2rem);\n\t\tflex-direction: column;\n\t\talign-items: center;\n\t\tbackground: #034da1;\n\t\topacity: 0;\n\t\tpointer-events: none;\n\t\tvisibility: hidden;\n\t\tborder-top: 0.1rem solid rgba(255, 255, 255, 0.08);\n\t\tz-index: 100;\n\t\toverflow: auto;\n\t}\n}\n@media (max-width: 766px) {\n\t.mobile-menu-opened .main-nav .main-menu {\n\t\topacity: 1;\n\t\tvisibility: visible;\n\t\tpointer-events: all;\n\t\ttransition: all 0.3s ease;\n\t}\n}\n@media (min-width: 768px) {\n\t.main-nav .main-menu li:hover .menu-link {\n\t\tbackground: rgba(0, 0, 0, 0.1);\n\t}\n}\n.main-nav .main-menu .menu-link {\n\tdisplay: block;\n\tpadding: 1rem 1.5rem 1rem 1rem;\n\ttext-decoration: none;\n}\n.main-nav .main-menu .has-dropdown {\n\tposition: relative;\n}\n@media (max-width: 766px) {\n\t.main-nav .main-menu .has-dropdown {\n\t\twidth: 100%;\n\t\tdisplay: flex;\n\t\tjustify-content: center;\n\t\talign-items: center;\n\t\tflex-wrap: wrap;\n\t}\n}\n.main-nav .main-menu .has-dropdown .dropdown-arrow {\n\tdisplay: block;\n\twidth: 1.5rem;\n\theight: 1.5rem;\n\tbackground-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' height='24px' viewBox='0 0 24 24' width='24px' fill='%23ffffff'%3E%3Cpath d='M0 0h24v24H0V0z' fill='none'/%3E%3Cpath d='M10.02 6L8.61 7.41 13.19 12l-4.58 4.59L10.02 18l6-6-6-6z'/%3E%3C/svg%3E\");\n\tbackground-size: 1.5rem;\n\ttransition: all 0.3s ease;\n\tcursor: pointer;\n}\n@media (min-width: 768px) {\n\t.main-nav .main-menu .has-dropdown .dropdown-arrow {\n\t\tposition: absolute;\n\t\ttop: 50%;\n\t\ttransform: translateY(-50%) rotate(90deg);\n\t\tright: 0;\n\t}\n}\n@media (max-width: 766px) {\n\t.main-nav .main-menu .has-dropdown .dropdown-arrow {\n\t\twidth: 3rem;\n\t\theight: 3rem;\n\t\tright: -2rem;\n\t\tbackground-size: 2rem;\n\t\tbackground-position: center;\n\t\ttransform: rotate(90deg);\n\t}\n}\n@media (max-width: 766px) {\n\t.main-nav .main-menu .has-dropdown.open .dropdown-arrow {\n\t\ttransform: rotate(-90deg);\n\t\ttransition: all 0.3s ease;\n\t}\n}\n@media (max-width: 766px) {\n\t.mobile-menu-opened .main-nav .main-menu .has-dropdown.open .dropdown {\n\t\tdisplay: block;\n\t\toverflow: visible;\n\t\topacity: 1;\n\t\tvisibility: visible;\n\t\tpointer-events: all;\n\t\ttransition: all 0.3s ease;\n\t}\n}\n@media (min-width: 768px) {\n\t.main-nav .main-menu .has-dropdown:hover .dropdown {\n\t\topacity: 1;\n\t\tvisibility: visible;\n\t\tpointer-events: all;\n\t\ttransition: all 0.3s ease;\n\t}\n}\n@media (min-width: 768px) {\n\t.main-nav .main-menu .has-dropdown:hover .dropdown-arrow {\n\t\ttransform: translateY(-50%) rotate(-90deg);\n\t\ttransition: all 0.3s ease;\n\t}\n}\n.main-nav .main-menu .has-dropdown .dropdown {\n\tcolor: #000;\n\tbackground: #fff;\n\tbox-shadow: 0 0.125rem 0.125rem -0.125rem rgba(0, 0, 0, 0.08), 0 0.25rem 0.75rem rgba(0, 0, 0, 0.08);\n\topacity: 0;\n\tvisibility: hidden;\n\tpointer-events: none;\n\ttransition: all 0.3s ease;\n}\n@media (max-width: 766px) {\n\t.main-nav .main-menu .has-dropdown .dropdown {\n\t\twidth: 100%;\n\t\tdisplay: none;\n\t}\n}\n@media (min-width: 768px) {\n\t.main-nav .main-menu .has-dropdown .dropdown {\n\t\tposition: absolute;\n\t\ttop: 100%;\n\t\tleft: 0;\n\t}\n}\n.main-nav .main-menu .has-dropdown .dropdown a {\n\tdisplay: block;\n\tpadding: 1rem 3.5rem 1rem 1rem;\n\twhite-space: nowrap;\n\ttext-decoration: none;\n}\n.main-nav .main-menu .has-dropdown .dropdown ul {\n\tpadding: 0;\n\tmargin: 0;\n\tlist-style: none;\n}\n.main-nav .main-menu .has-sub-dropdown {\n\tposition: relative;\n}\n@media (max-width: 766px) {\n\t.main-nav .main-menu .has-sub-dropdown:not(:first-child) {\n\t\tborder-top: solid 0.1rem rgba(0, 0, 0, 0.08);\n\t}\n}\n@media (max-width: 766px) {\n\t.main-nav .main-menu .has-sub-dropdown {\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tflex-wrap: wrap;\n\t}\n}\n@media (max-width: 766px) {\n\t.main-nav .main-menu .has-sub-dropdown a {\n\t\tflex: 1;\n\t}\n}\n.main-nav .main-menu .has-sub-dropdown .icon-plus {\n\tdisplay: block;\n\twidth: 1.5rem;\n\theight: 1.5rem;\n\tbackground: url(../images/plus.svg);\n\tbackground-size: 1.5rem;\n\ttransition: all 0.3s ease;\n\tcursor: pointer;\n}\n@media (max-width: 766px) {\n\t.main-nav .main-menu .has-sub-dropdown .icon-plus {\n\t\twidth: 3rem;\n\t\theight: 3rem;\n\t\tbackground-size: 1.5rem;\n\t\tbackground-position: center;\n\t\tbackground-repeat: no-repeat;\n\t}\n}\n@media (min-width: 768px) {\n\t.main-nav .main-menu .has-sub-dropdown .icon-plus {\n\t\tposition: absolute;\n\t\ttop: 50%;\n\t\tright: 1rem;\n\t\ttransform: translateY(-50%);\n\t}\n}\n@media (min-width: 768px) {\n\t.mobile-menu-opened .main-nav .main-menu .has-sub-dropdown:hover .sub-dropdown {\n\t\topacity: 1;\n\t\tvisibility: visible;\n\t\tpointer-events: all;\n\t\ttransition: all 0.3s ease;\n\t}\n}\n@media (min-width: 768px) {\n\t.main-nav .main-menu .has-sub-dropdown:hover .icon-plus {\n\t\tbackground: url(../images/minus.svg);\n\t\tbackground-size: 1.5rem;\n\t}\n}\n@media (min-width: 768px) {\n\t.main-nav .main-menu .has-sub-dropdown:hover a {\n\t\tbackground: rgba(0, 0, 0, 0.08);\n\t}\n}\n@media (max-width: 766px) {\n\t.main-nav .main-menu .has-sub-dropdown.open .sub-dropdown {\n\t\topacity: 1;\n\t\tvisibility: visible;\n\t\tpointer-events: all;\n\t\ttransition: all 0.3s ease;\n\t\tmax-height: 100%;\n\t\tpadding: 2rem;\n\t}\n}\n@media (max-width: 766px) {\n\t.main-nav .main-menu .has-sub-dropdown.open .icon-plus {\n\t\tbackground: url(../images/minus.svg);\n\t\tbackground-size: 1.5rem;\n\t\tbackground-position: center;\n\t\tbackground-repeat: no-repeat;\n\t}\n}\n.main-nav .main-menu .has-sub-dropdown .sub-dropdown {\n\tpadding: 2rem;\n\tbackground: #fff;\n\tbox-shadow: 0 0.125rem 0.125rem -0.125rem rgba(0, 0, 0, 0.08), 0 0.25rem 0.75rem rgba(0, 0, 0, 0.08);\n\topacity: 0;\n\tvisibility: hidden;\n\tpointer-events: none;\n\ttransition: all 0.3s ease;\n}\n@media (max-width: 766px) {\n\t.main-nav .main-menu .has-sub-dropdown .sub-dropdown {\n\t\tpadding: 0 2rem;\n\t\tmax-height: 0;\n\t\toverflow: hidden;\n\t}\n}\n.main-nav .main-menu .has-sub-dropdown .sub-dropdown p {\n\tmargin: 0 0 1rem 0;\n}\n@media (min-width: 768px) {\n\t.main-nav .main-menu .has-sub-dropdown .sub-dropdown {\n\t\tposition: absolute;\n\t\ttop: 0;\n\t\tleft: 100%;\n\t\tmin-width: 20rem;\n\t}\n}\n@media (min-width: 768px) {\n\t.main-nav .main-menu .list {\n\t\tmin-width: 20rem;\n\t}\n}\n.main-nav .main-menu .list li {\n\tposition: relative;\n\tpadding-left: 1.5rem;\n}\n.main-nav .main-menu .list li::before {\n\tcontent: \"\";\n\tposition: absolute;\n\ttop: 50%;\n\tleft: 0;\n\ttransform: translateY(-50%);\n\twidth: 1.5rem;\n\theight: 1.5rem;\n\tbackground: url(../images/arrow-right.svg);\n\tbackground-size: 1.5rem;\n}\n\n.open-close-menu {\n\tposition: relative;\n\twidth: 3rem;\n\theight: 3rem;\n\tborder: 0.3rem solid transparent;\n\tdisplay: block;\n\tfont-size: 0;\n\tline-height: 0;\n\tz-index: 100;\n}\n@media (min-width: 768px) {\n\t.open-close-menu {\n\t\tdisplay: none;\n\t}\n}\n.open-close-menu span {\n\tposition: absolute;\n\ttop: 50%;\n\tleft: 0;\n\twidth: 100%;\n\tborder-bottom: 0.1rem solid;\n\theight: 0;\n\tcolor: #fff;\n\ttransition: all 0.3s ease;\n}\n.open-close-menu span:nth-child(1) {\n\tmargin-top: -0.7rem;\n}\n.open-close-menu span:nth-child(3) {\n\tmargin-top: 0.7rem;\n}\n.mobile-menu-opened .open-close-menu span:nth-child(1) {\n\tmargin-top: 0;\n\ttransform: rotate(45deg);\n}\n.mobile-menu-opened .open-close-menu span:nth-child(2) {\n\topacity: 0;\n}\n.mobile-menu-opened .open-close-menu span:nth-child(3) {\n\tmargin-top: 0;\n\ttransform: rotate(-45deg);\n}\n\n.banner {\n\tpadding: 4rem 0;\n}\n.banner .container {\n\tdisplay: flex;\n\talign-items: center;\n\tflex-wrap: wrap;\n}\n.banner .col {\n\twidth: 100%;\n}\n@media (min-width: 768px) {\n\t.banner .col {\n\t\twidth: 50%;\n\t}\n}\n.banner .col.col-center {\n\tdisplay: flex;\n\tjustify-content: center;\n}\n.banner .btn {\n\twidth: 50%;\n}\n.banner .img-holder {\n\tposition: relative;\n}\n@media (max-width: 766px) {\n\t.banner .img-holder {\n\t\tmargin-top: 5rem;\n\t}\n}\n@media (min-width: 768px) {\n\t.banner .img-holder {\n\t\twidth: 40rem;\n\t\theight: 40rem;\n\t}\n}\n.banner .img-holder img {\n\twidth: 100%;\n\theight: 100%;\n\tobject-fit: cover;\n}\n.banner .img-holder.show .desc-img {\n\topacity: 1;\n\tvisibility: visible;\n\tpointer-events: all;\n\ttransition: all 0.3s ease;\n}\n.banner .img-holder .desc-img {\n\tposition: absolute;\n\ttop: 0;\n\tleft: 0;\n\twidth: 100%;\n\theight: 100%;\n\tpadding: 2rem;\n\tbackground: rgba(255, 255, 255, 0.5);\n\topacity: 0;\n\tvisibility: hidden;\n\tpointer-events: none;\n\ttransition: all 0.3s ease;\n}\n.banner .img-holder .desc-img p {\n\tmargin: 0 0 1rem 0;\n}\n\n.btn {\n\tdisplay: inline-flex;\n\tjustify-content: center;\n\tpadding: 1rem 2rem;\n\tcolor: #fff;\n\tbackground: #034da1;\n\tborder-radius: 0.5rem;\n\tborder: 0.1rem solid #034da1;\n}\n.btn:hover {\n\ttext-decoration: none;\n\tcolor: #034da1;\n\tbackground: #fff;\n\tborder: 0.1rem solid #034da1;\n}","// vars\r\n$images: \"../images/\";\r\n\r\n// fonts\r\n$open-sans: \"Open Sans\", sans-serif;\r\n\r\n// breakpoints\r\n$breakpoints: (\r\n\tphone: 374px,\r\n\ttablet: 767px,\r\n\tdesktop: 991px,\r\n\tlgdesktop: 1199px\r\n);\r\n\r\n// colors\r\n$white: #fff;\r\n$black: #000;\r\n$blue: #034da1;\r\n\r\n// base vars\r\n$text-color-base: $black;\r\n$body-bg: $white;\r\n$font-family-base: $open-sans;\r\n$font-size-base: 1.6rem;\r\n$font-weight-base: 400;\r\n$line-height-base: 1.42857143;\r\n$links-color-base: inherit;\r\n$headings-font-weight: 400;\r\n$transition: all 0.3s ease;\r\n\r\n// dev2\r\n// dev3\r\n// dev4\r\n","/* header */\n.header {\n\tbackground: $blue;\n}\n\n.main-nav {\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: space-between;\n\n\t.left-side {\n\t\t@include media(\">tablet\") {\n\t\t\twidth: 50%;\n\t\t}\n\t}\n\n\t.right-side {\n\t\t@include media(\">tablet\") {\n\t\t\tdisplay: flex;\n\t\t\tjustify-content: flex-end;\n\t\t\twidth: 50%;\n\t\t}\n\t}\n\n\t.profile {\n\t\tmargin: 0;\n\t\tpadding: 0;\n\t\tlist-style: none;\n\t\tdisplay: flex;\n\t\tcolor: $white;\n\n\t\ta {\n\t\t\tdisplay: block;\n\t\t\tpadding: 1rem;\n\t\t\ttext-decoration: none;\n\t\t}\n\t}\n\n\t.main-menu {\n\t\tmargin: 0;\n\t\tpadding: 0;\n\t\tlist-style: none;\n\t\tdisplay: flex;\n\t\tcolor: $white;\n\t\ttransition: $transition;\n\n\t\t@include media(\">desktop\") {\n\t\t\twidth: 70%;\n\t\t\tjustify-content: space-between;\n\t\t}\n\n\t\t@include media(\"<tablet\") {\n\t\t\tposition: fixed;\n\t\t\ttop: 4.2rem;\n\t\t\tpadding-top: 4rem;\n\t\t\tleft: 0;\n\t\t\twidth: 100%;\n\t\t\theight: calc(100% - 4.2rem);\n\t\t\tflex-direction: column;\n\t\t\talign-items: center;\n\t\t\tbackground: $blue;\n\t\t\topacity: 0;\n\t\t\tpointer-events: none;\n\t\t\tvisibility: hidden;\n\t\t\tborder-top: 0.1rem solid rgba($white, 0.08);\n\t\t\tz-index: 100;\n\t\t\toverflow: auto;\n\t\t}\n\n\t\t.mobile-menu-opened & {\n\t\t\t@include media(\"<tablet\") {\n\t\t\t\topacity: 1;\n\t\t\t\tvisibility: visible;\n\t\t\t\tpointer-events: all;\n\t\t\t\ttransition: $transition;\n\t\t\t}\n\t\t}\n\n\t\tli {\n\t\t\t&:hover {\n\t\t\t\t.menu-link {\n\t\t\t\t\t@include media(\">tablet\") {\n\t\t\t\t\t\tbackground: rgba($black, 0.1);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t.menu-link {\n\t\t\tdisplay: block;\n\t\t\tpadding: 1rem 1.5rem 1rem 1rem;\n\t\t\ttext-decoration: none;\n\t\t}\n\n\t\t.has-dropdown {\n\t\t\tposition: relative;\n\n\t\t\t@include media(\"<tablet\") {\n\t\t\t\twidth: 100%;\n\t\t\t\tdisplay: flex;\n\t\t\t\tjustify-content: center;\n\t\t\t\talign-items: center;\n\t\t\t\tflex-wrap: wrap;\n\t\t\t}\n\n\t\t\t.dropdown-arrow {\n\t\t\t\tdisplay: block;\n\t\t\t\twidth: 1.5rem;\n\t\t\t\theight: 1.5rem;\n\t\t\t\tbackground-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' height='24px' viewBox='0 0 24 24' width='24px' fill='%23ffffff'%3E%3Cpath d='M0 0h24v24H0V0z' fill='none'/%3E%3Cpath d='M10.02 6L8.61 7.41 13.19 12l-4.58 4.59L10.02 18l6-6-6-6z'/%3E%3C/svg%3E\");\n\t\t\t\tbackground-size: 1.5rem;\n\t\t\t\ttransition: $transition;\n\t\t\t\tcursor: pointer;\n\n\t\t\t\t@include media(\">tablet\") {\n\t\t\t\t\tposition: absolute;\n\t\t\t\t\ttop: 50%;\n\t\t\t\t\ttransform: translateY(-50%) rotate(90deg);\n\t\t\t\t\tright: 0;\n\t\t\t\t}\n\n\t\t\t\t@include media(\"<tablet\") {\n\t\t\t\t\twidth: 3rem;\n\t\t\t\t\theight: 3rem;\n\t\t\t\t\tright: -2rem;\n\t\t\t\t\tbackground-size: 2rem;\n\t\t\t\t\tbackground-position: center;\n\t\t\t\t\ttransform: rotate(90deg);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t&.open {\n\t\t\t\t.dropdown-arrow {\n\t\t\t\t\t@include media(\"<tablet\") {\n\t\t\t\t\t\ttransform: rotate(-90deg);\n\t\t\t\t\t\ttransition: $transition;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t.dropdown {\n\t\t\t\t\t.mobile-menu-opened & {\n\t\t\t\t\t\t@include media(\"<tablet\") {\n\t\t\t\t\t\t\tdisplay: block;\n\t\t\t\t\t\t\toverflow: visible;\n\t\t\t\t\t\t\topacity: 1;\n\t\t\t\t\t\t\tvisibility: visible;\n\t\t\t\t\t\t\tpointer-events: all;\n\t\t\t\t\t\t\ttransition: $transition;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t&:hover {\n\t\t\t\t.dropdown {\n\t\t\t\t\t@include media(\">tablet\") {\n\t\t\t\t\t\topacity: 1;\n\t\t\t\t\t\tvisibility: visible;\n\t\t\t\t\t\tpointer-events: all;\n\t\t\t\t\t\ttransition: $transition;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t.dropdown-arrow {\n\t\t\t\t\t@include media(\">tablet\") {\n\t\t\t\t\t\ttransform: translateY(-50%) rotate(-90deg);\n\t\t\t\t\t\ttransition: $transition;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t.dropdown {\n\t\t\t\tcolor: $black;\n\t\t\t\tbackground: $white;\n\t\t\t\tbox-shadow: 0 0.125rem 0.125rem -0.125rem rgba($black, 0.08), 0 0.25rem 0.75rem rgba($black, 0.08);\n\t\t\t\topacity: 0;\n\t\t\t\tvisibility: hidden;\n\t\t\t\tpointer-events: none;\n\t\t\t\ttransition: $transition;\n\n\t\t\t\t@include media(\"<tablet\") {\n\t\t\t\t\twidth: 100%;\n\t\t\t\t\tdisplay: none;\n\t\t\t\t}\n\n\t\t\t\t@include media(\">tablet\") {\n\t\t\t\t\tposition: absolute;\n\t\t\t\t\ttop: 100%;\n\t\t\t\t\tleft: 0;\n\t\t\t\t}\n\n\t\t\t\ta {\n\t\t\t\t\tdisplay: block;\n\t\t\t\t\tpadding: 1rem 3.5rem 1rem 1rem;\n\t\t\t\t\twhite-space: nowrap;\n\t\t\t\t\ttext-decoration: none;\n\t\t\t\t}\n\n\t\t\t\tul {\n\t\t\t\t\tpadding: 0;\n\t\t\t\t\tmargin: 0;\n\t\t\t\t\tlist-style: none;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t.has-sub-dropdown {\n\t\t\tposition: relative;\n\n\t\t\t&:not(:first-child) {\n\t\t\t\t@include media(\"<tablet\") {\n\t\t\t\t\tborder-top: solid 0.1rem rgba($black, 0.08);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t@include media(\"<tablet\") {\n\t\t\t\tdisplay: flex;\n\t\t\t\talign-items: center;\n\t\t\t\tflex-wrap: wrap;\n\t\t\t}\n\n\t\t\ta {\n\t\t\t\t@include media(\"<tablet\") {\n\t\t\t\t\tflex: 1;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t.icon-plus {\n\t\t\t\tdisplay: block;\n\t\t\t\twidth: 1.5rem;\n\t\t\t\theight: 1.5rem;\n\t\t\t\tbackground: url(#{$images}plus.svg);\n\t\t\t\tbackground-size: 1.5rem;\n\t\t\t\ttransition: $transition;\n\t\t\t\tcursor: pointer;\n\n\t\t\t\t@include media(\"<tablet\") {\n\t\t\t\t\twidth: 3rem;\n\t\t\t\t\theight: 3rem;\n\t\t\t\t\tbackground-size: 1.5rem;\n\t\t\t\t\tbackground-position: center;\n\t\t\t\t\tbackground-repeat: no-repeat;\n\t\t\t\t}\n\n\t\t\t\t@include media(\">tablet\") {\n\t\t\t\t\tposition: absolute;\n\t\t\t\t\ttop: 50%;\n\t\t\t\t\tright: 1rem;\n\t\t\t\t\ttransform: translateY(-50%);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t&:hover {\n\t\t\t\t.sub-dropdown {\n\t\t\t\t\t.mobile-menu-opened & {\n\t\t\t\t\t\t@include media(\">tablet\") {\n\t\t\t\t\t\t\topacity: 1;\n\t\t\t\t\t\t\tvisibility: visible;\n\t\t\t\t\t\t\tpointer-events: all;\n\t\t\t\t\t\t\ttransition: $transition;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t.icon-plus {\n\t\t\t\t\t@include media(\">tablet\") {\n\t\t\t\t\t\tbackground: url(#{$images}minus.svg);\n\t\t\t\t\t\tbackground-size: 1.5rem;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\ta {\n\t\t\t\t\t@include media(\">tablet\") {\n\t\t\t\t\t\tbackground: rgba($black, 0.08);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t&.open {\n\t\t\t\t.sub-dropdown {\n\t\t\t\t\t@include media(\"<tablet\") {\n\t\t\t\t\t\topacity: 1;\n\t\t\t\t\t\tvisibility: visible;\n\t\t\t\t\t\tpointer-events: all;\n\t\t\t\t\t\ttransition: $transition;\n\t\t\t\t\t\tmax-height: 100%;\n\t\t\t\t\t\tpadding: 2rem;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t.icon-plus {\n\t\t\t\t\t@include media(\"<tablet\") {\n\t\t\t\t\t\tbackground: url(#{$images}minus.svg);\n\t\t\t\t\t\tbackground-size: 1.5rem;\n\t\t\t\t\t\tbackground-position: center;\n\t\t\t\t\t\tbackground-repeat: no-repeat;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t.sub-dropdown {\n\t\t\t\tpadding: 2rem;\n\t\t\t\tbackground: $white;\n\t\t\t\tbox-shadow: 0 0.125rem 0.125rem -0.125rem rgba($black, 0.08), 0 0.25rem 0.75rem rgba($black, 0.08);\n\t\t\t\topacity: 0;\n\t\t\t\tvisibility: hidden;\n\t\t\t\tpointer-events: none;\n\t\t\t\ttransition: $transition;\n\n\t\t\t\t@include media(\"<tablet\") {\n\t\t\t\t\tpadding: 0 2rem;\n\t\t\t\t\tmax-height: 0;\n\t\t\t\t\toverflow: hidden;\n\t\t\t\t}\n\n\t\t\t\tp {\n\t\t\t\t\tmargin: 0 0 1rem 0;\n\t\t\t\t}\n\n\t\t\t\t@include media(\">tablet\") {\n\t\t\t\t\tposition: absolute;\n\t\t\t\t\ttop: 0;\n\t\t\t\t\tleft: 100%;\n\t\t\t\t\tmin-width: 20rem;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t.list {\n\t\t\t@include media(\">tablet\") {\n\t\t\t\tmin-width: 20rem;\n\t\t\t}\n\n\t\t\tli {\n\t\t\t\tposition: relative;\n\t\t\t\tpadding-left: 1.5rem;\n\n\t\t\t\t&::before {\n\t\t\t\t\tcontent: \"\";\n\t\t\t\t\tposition: absolute;\n\t\t\t\t\ttop: 50%;\n\t\t\t\t\tleft: 0;\n\t\t\t\t\ttransform: translateY(-50%);\n\t\t\t\t\twidth: 1.5rem;\n\t\t\t\t\theight: 1.5rem;\n\t\t\t\t\tbackground: url(#{$images}arrow-right.svg);\n\t\t\t\t\tbackground-size: 1.5rem;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\n.open-close-menu {\n\tposition: relative;\n\twidth: 3rem;\n\theight: 3rem;\n\tborder: 0.3rem solid transparent;\n\tdisplay: block;\n\tfont-size: 0;\n\tline-height: 0;\n\tz-index: 100;\n\n\t@include media(\">tablet\") {\n\t\tdisplay: none;\n\t}\n\n\tspan {\n\t\tposition: absolute;\n\t\ttop: 50%;\n\t\tleft: 0;\n\t\twidth: 100%;\n\t\tborder-bottom: 0.1rem solid;\n\t\theight: 0;\n\t\tcolor: $white;\n\t\ttransition: $transition;\n\n\t\t@for $i from 1 through 3 {\n\t\t\t&:nth-child(#{$i}) {\n\t\t\t\t@if ($i == 1) {\n\t\t\t\t\tmargin-top: -0.7rem;\n\t\t\t\t}\n\t\t\t\t@if ($i == 3) {\n\t\t\t\t\tmargin-top: 0.7rem;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t.mobile-menu-opened & {\n\t\t\t@for $i from 1 through 3 {\n\t\t\t\t&:nth-child(#{$i}) {\n\t\t\t\t\t@if ($i == 1) {\n\t\t\t\t\t\tmargin-top: 0;\n\t\t\t\t\t\ttransform: rotate(45deg);\n\t\t\t\t\t}\n\t\t\t\t\t@if ($i == 2) {\n\t\t\t\t\t\topacity: 0;\n\t\t\t\t\t}\n\t\t\t\t\t@if ($i == 3) {\n\t\t\t\t\t\tmargin-top: 0;\n\t\t\t\t\t\ttransform: rotate(-45deg);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n","@charset \"UTF-8\";\r\n\r\n//     _            _           _                           _ _\r\n//    (_)          | |         | |                         | (_)\r\n//     _ _ __   ___| |_   _  __| | ___   _ __ ___   ___  __| |_  __ _\r\n//    | | '_ \\ / __| | | | |/ _` |/ _ \\ | '_ ` _ \\ / _ \\/ _` | |/ _` |\r\n//    | | | | | (__| | |_| | (_| |  __/ | | | | | |  __/ (_| | | (_| |\r\n//    |_|_| |_|\\___|_|\\__,_|\\__,_|\\___| |_| |_| |_|\\___|\\__,_|_|\\__,_|\r\n//\r\n//      Simple, elegant and maintainable media queries in Sass\r\n//                        v1.4.9\r\n//\r\n//        https://eduardoboucas.github.io/include-media\r\n//\r\n//         Authors: Eduardo Boucas (@eduardoboucas)\r\n//                  Kitty Giraudel (@kittygiraudel)\r\n//\r\n//      This project is licensed under the terms of the MIT license\r\n////\r\n/// include-media library public configuration\r\n/// @author Eduardo Boucas\r\n/// @access public\r\n////\r\n\r\n\r\n///\r\n/// Creates a list of global breakpoints\r\n///\r\n/// @example scss - Creates a single breakpoint with the label `phone`\r\n///  $breakpoints: ('phone': 320px);\r\n///\r\n$breakpoints: (\r\n  'phone': 320px,\r\n  'tablet': 768px,\r\n  'desktop': 1024px\r\n) !default;\r\n\r\n\r\n///\r\n/// Creates a list of static expressions or media types\r\n///\r\n/// @example scss - Creates a single media type (screen)\r\n///  $media-expressions: ('screen': 'screen');\r\n///\r\n/// @example scss - Creates a static expression with logical disjunction (OR operator)\r\n///  $media-expressions: (\r\n///    'retina2x': '(-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi)'\r\n///  );\r\n///\r\n$media-expressions: (\r\n  'screen': 'screen',\r\n  'print': 'print',\r\n  'handheld': 'handheld',\r\n  'landscape': '(orientation: landscape)',\r\n  'portrait': '(orientation: portrait)',\r\n  'retina2x': '(-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi), (min-resolution: 2dppx)',\r\n  'retina3x': '(-webkit-min-device-pixel-ratio: 3), (min-resolution: 350dpi), (min-resolution: 3dppx)'\r\n) !default;\r\n\r\n\r\n///\r\n/// Defines a number to be added or subtracted from each unit when declaring breakpoints with exclusive intervals\r\n///\r\n/// @example scss - Interval for pixels is defined as `1` by default\r\n///  @include media('>128px') {}\r\n///\r\n///  /* Generates: */\r\n///  @media (min-width: 129px) {}\r\n///\r\n/// @example scss - Interval for ems is defined as `0.01` by default\r\n///  @include media('>20em') {}\r\n///\r\n///  /* Generates: */\r\n///  @media (min-width: 20.01em) {}\r\n///\r\n/// @example scss - Interval for rems is defined as `0.1` by default, to be used with `font-size: 62.5%;`\r\n///  @include media('>2.0rem') {}\r\n///\r\n///  /* Generates: */\r\n///  @media (min-width: 2.1rem) {}\r\n///\r\n$unit-intervals: (\r\n  'px': 1,\r\n  'em': 0.01,\r\n  'rem': 0.1,\r\n  '': 0\r\n) !default;\r\n\r\n///\r\n/// Defines whether support for media queries is available, useful for creating separate stylesheets\r\n/// for browsers that don't support media queries.\r\n///\r\n/// @example scss - Disables support for media queries\r\n///  $im-media-support: false;\r\n///  @include media('>=tablet') {\r\n///    .foo {\r\n///      color: tomato;\r\n///    }\r\n///  }\r\n///\r\n///  /* Generates: */\r\n///  .foo {\r\n///    color: tomato;\r\n///  }\r\n///\r\n$im-media-support: true !default;\r\n\r\n///\r\n/// Selects which breakpoint to emulate when support for media queries is disabled. Media queries that start at or\r\n/// intercept the breakpoint will be displayed, any others will be ignored.\r\n///\r\n/// @example scss - This media query will show because it intercepts the static breakpoint\r\n///  $im-media-support: false;\r\n///  $im-no-media-breakpoint: 'desktop';\r\n///  @include media('>=tablet') {\r\n///    .foo {\r\n///      color: tomato;\r\n///    }\r\n///  }\r\n///\r\n///  /* Generates: */\r\n///  .foo {\r\n///    color: tomato;\r\n///  }\r\n///\r\n/// @example scss - This media query will NOT show because it does not intercept the desktop breakpoint\r\n///  $im-media-support: false;\r\n///  $im-no-media-breakpoint: 'tablet';\r\n///  @include media('>=desktop') {\r\n///    .foo {\r\n///      color: tomato;\r\n///    }\r\n///  }\r\n///\r\n///  /* No output */\r\n///\r\n$im-no-media-breakpoint: 'desktop' !default;\r\n\r\n///\r\n/// Selects which media expressions are allowed in an expression for it to be used when media queries\r\n/// are not supported.\r\n///\r\n/// @example scss - This media query will show because it intercepts the static breakpoint and contains only accepted media expressions\r\n///  $im-media-support: false;\r\n///  $im-no-media-breakpoint: 'desktop';\r\n///  $im-no-media-expressions: ('screen');\r\n///  @include media('>=tablet', 'screen') {\r\n///    .foo {\r\n///      color: tomato;\r\n///    }\r\n///  }\r\n///\r\n///   /* Generates: */\r\n///   .foo {\r\n///     color: tomato;\r\n///   }\r\n///\r\n/// @example scss - This media query will NOT show because it intercepts the static breakpoint but contains a media expression that is not accepted\r\n///  $im-media-support: false;\r\n///  $im-no-media-breakpoint: 'desktop';\r\n///  $im-no-media-expressions: ('screen');\r\n///  @include media('>=tablet', 'retina2x') {\r\n///    .foo {\r\n///      color: tomato;\r\n///    }\r\n///  }\r\n///\r\n///  /* No output */\r\n///\r\n$im-no-media-expressions: ('screen', 'portrait', 'landscape') !default;\r\n\r\n////\r\n/// Cross-engine logging engine\r\n/// @author Kitty Giraudel\r\n/// @access private\r\n////\r\n\r\n\r\n///\r\n/// Log a message either with `@error` if supported\r\n/// else with `@warn`, using `feature-exists('at-error')`\r\n/// to detect support.\r\n///\r\n/// @param {String} $message - Message to log\r\n///\r\n@function im-log($message) {\r\n  @if feature-exists('at-error') {\r\n    @error $message;\r\n  } @else {\r\n    @warn $message;\r\n    $_: noop();\r\n  }\r\n\r\n  @return $message;\r\n}\r\n\r\n\r\n///\r\n/// Wrapper mixin for the log function so it can be used with a more friendly\r\n/// API than `@if im-log('..') {}` or `$_: im-log('..')`. Basically, use the function\r\n/// within functions because it is not possible to include a mixin in a function\r\n/// and use the mixin everywhere else because it's much more elegant.\r\n///\r\n/// @param {String} $message - Message to log\r\n///\r\n@mixin log($message) {\r\n  @if im-log($message) {}\r\n}\r\n\r\n\r\n///\r\n/// Function with no `@return` called next to `@warn` in Sass 3.3\r\n/// to trigger a compiling error and stop the process.\r\n///\r\n@function noop() {}\r\n\r\n///\r\n/// Determines whether a list of conditions is intercepted by the static breakpoint.\r\n///\r\n/// @param {Arglist}   $conditions  - Media query conditions\r\n///\r\n/// @return {Boolean} - Returns true if the conditions are intercepted by the static breakpoint\r\n///\r\n@function im-intercepts-static-breakpoint($conditions...) {\r\n  $no-media-breakpoint-value: map-get($breakpoints, $im-no-media-breakpoint);\r\n\r\n  @if not $no-media-breakpoint-value {\r\n    @if im-log('`#{$im-no-media-breakpoint}` is not a valid breakpoint.') {}\r\n  }\r\n\r\n  @each $condition in $conditions {\r\n    @if not map-has-key($media-expressions, $condition) {\r\n      $operator: get-expression-operator($condition);\r\n      $prefix: get-expression-prefix($operator);\r\n      $value: get-expression-value($condition, $operator);\r\n\r\n      @if ($prefix == 'max' and $value <= $no-media-breakpoint-value) or\r\n          ($prefix == 'min' and $value > $no-media-breakpoint-value) {\r\n        @return false;\r\n      }\r\n    } @else if not index($im-no-media-expressions, $condition) {\r\n      @return false;\r\n    }\r\n  }\r\n\r\n  @return true;\r\n}\r\n\r\n////\r\n/// Parsing engine\r\n/// @author Kitty Giraudel\r\n/// @access private\r\n////\r\n\r\n\r\n///\r\n/// Get operator of an expression\r\n///\r\n/// @param {String} $expression - Expression to extract operator from\r\n///\r\n/// @return {String} - Any of `>=`, `>`, `<=`, `<`, `≥`, `≤`\r\n///\r\n@function get-expression-operator($expression) {\r\n  @each $operator in ('>=', '>', '<=', '<', '≥', '≤') {\r\n    @if str-index($expression, $operator) {\r\n      @return $operator;\r\n    }\r\n  }\r\n\r\n  // It is not possible to include a mixin inside a function, so we have to\r\n  // rely on the `im-log(..)` function rather than the `log(..)` mixin. Because\r\n  // functions cannot be called anywhere in Sass, we need to hack the call in\r\n  // a dummy variable, such as `$_`. If anybody ever raise a scoping issue with\r\n  // Sass 3.3, change this line in `@if im-log(..) {}` instead.\r\n  $_: im-log('No operator found in `#{$expression}`.');\r\n}\r\n\r\n\r\n///\r\n/// Get dimension of an expression, based on a found operator\r\n///\r\n/// @param {String} $expression - Expression to extract dimension from\r\n/// @param {String} $operator - Operator from `$expression`\r\n///\r\n/// @return {String} - `width` or `height` (or potentially anything else)\r\n///\r\n@function get-expression-dimension($expression, $operator) {\r\n  $operator-index: str-index($expression, $operator);\r\n  $parsed-dimension: str-slice($expression, 0, $operator-index - 1);\r\n  $dimension: 'width';\r\n\r\n  @if str-length($parsed-dimension) > 0 {\r\n    $dimension: $parsed-dimension;\r\n  }\r\n\r\n  @return $dimension;\r\n}\r\n\r\n\r\n///\r\n/// Get dimension prefix based on an operator\r\n///\r\n/// @param {String} $operator - Operator\r\n///\r\n/// @return {String} - `min` or `max`\r\n///\r\n@function get-expression-prefix($operator) {\r\n  @return if(index(('<', '<=', '≤'), $operator), 'max', 'min');\r\n}\r\n\r\n\r\n///\r\n/// Get value of an expression, based on a found operator\r\n///\r\n/// @param {String} $expression - Expression to extract value from\r\n/// @param {String} $operator - Operator from `$expression`\r\n///\r\n/// @return {Number} - A numeric value\r\n///\r\n@function get-expression-value($expression, $operator) {\r\n  $operator-index: str-index($expression, $operator);\r\n  $value: str-slice($expression, $operator-index + str-length($operator));\r\n\r\n  @if map-has-key($breakpoints, $value) {\r\n    $value: map-get($breakpoints, $value);\r\n  } @else {\r\n    $value: to-number($value);\r\n  }\r\n\r\n  $interval: map-get($unit-intervals, unit($value));\r\n\r\n  @if not $interval {\r\n    // It is not possible to include a mixin inside a function, so we have to\r\n    // rely on the `im-log(..)` function rather than the `log(..)` mixin. Because\r\n    // functions cannot be called anywhere in Sass, we need to hack the call in\r\n    // a dummy variable, such as `$_`. If anybody ever raise a scoping issue with\r\n    // Sass 3.3, change this line in `@if im-log(..) {}` instead.\r\n    $_: im-log('Unknown unit `#{unit($value)}`.');\r\n  }\r\n\r\n  @if $operator == '>' {\r\n    $value: $value + $interval;\r\n  } @else if $operator == '<' {\r\n    $value: $value - $interval;\r\n  }\r\n\r\n  @return $value;\r\n}\r\n\r\n\r\n///\r\n/// Parse an expression to return a valid media-query expression\r\n///\r\n/// @param {String} $expression - Expression to parse\r\n///\r\n/// @return {String} - Valid media query\r\n///\r\n@function parse-expression($expression) {\r\n  // If it is part of $media-expressions, it has no operator\r\n  // then there is no need to go any further, just return the value\r\n  @if map-has-key($media-expressions, $expression) {\r\n    @return map-get($media-expressions, $expression);\r\n  }\r\n\r\n  $operator: get-expression-operator($expression);\r\n  $dimension: get-expression-dimension($expression, $operator);\r\n  $prefix: get-expression-prefix($operator);\r\n  $value: get-expression-value($expression, $operator);\r\n\r\n  @return '(#{$prefix}-#{$dimension}: #{$value})';\r\n}\r\n\r\n///\r\n/// Slice `$list` between `$start` and `$end` indexes\r\n///\r\n/// @access private\r\n///\r\n/// @param {List} $list - List to slice\r\n/// @param {Number} $start [1] - Start index\r\n/// @param {Number} $end [length($list)] - End index\r\n///\r\n/// @return {List} Sliced list\r\n///\r\n@function slice($list, $start: 1, $end: length($list)) {\r\n  @if length($list) < 1 or $start > $end {\r\n    @return ();\r\n  }\r\n\r\n  $result: ();\r\n\r\n  @for $i from $start through $end {\r\n    $result: append($result, nth($list, $i));\r\n  }\r\n\r\n  @return $result;\r\n}\r\n\r\n////\r\n/// String to number converter\r\n/// @author Kitty Giraudel\r\n/// @access private\r\n////\r\n\r\n\r\n///\r\n/// Casts a string into a number\r\n///\r\n/// @param {String | Number} $value - Value to be parsed\r\n///\r\n/// @return {Number}\r\n///\r\n@function to-number($value) {\r\n  @if type-of($value) == 'number' {\r\n    @return $value;\r\n  } @else if type-of($value) != 'string' {\r\n    $_: im-log('Value for `to-number` should be a number or a string.');\r\n  }\r\n\r\n  $first-character: str-slice($value, 1, 1);\r\n  $result: 0;\r\n  $digits: 0;\r\n  $minus: ($first-character == '-');\r\n  $numbers: ('0': 0, '1': 1, '2': 2, '3': 3, '4': 4, '5': 5, '6': 6, '7': 7, '8': 8, '9': 9);\r\n\r\n  // Remove +/- sign if present at first character\r\n  @if ($first-character == '+' or $first-character == '-') {\r\n    $value: str-slice($value, 2);\r\n  }\r\n\r\n  @for $i from 1 through str-length($value) {\r\n    $character: str-slice($value, $i, $i);\r\n\r\n    @if not (index(map-keys($numbers), $character) or $character == '.') {\r\n      @return to-length(if($minus, -$result, $result), str-slice($value, $i))\r\n    }\r\n\r\n    @if $character == '.' {\r\n      $digits: 1;\r\n    } @else if $digits == 0 {\r\n      $result: $result * 10 + map-get($numbers, $character);\r\n    } @else {\r\n      $digits: $digits * 10;\r\n      $result: $result + map-get($numbers, $character) / $digits;\r\n    }\r\n  }\r\n\r\n  @return if($minus, -$result, $result);\r\n}\r\n\r\n\r\n///\r\n/// Add `$unit` to `$value`\r\n///\r\n/// @param {Number} $value - Value to add unit to\r\n/// @param {String} $unit - String representation of the unit\r\n///\r\n/// @return {Number} - `$value` expressed in `$unit`\r\n///\r\n@function to-length($value, $unit) {\r\n  $units: ('px': 1px, 'cm': 1cm, 'mm': 1mm, '%': 1%, 'ch': 1ch, 'pc': 1pc, 'in': 1in, 'em': 1em, 'rem': 1rem, 'pt': 1pt, 'ex': 1ex, 'vw': 1vw, 'vh': 1vh, 'vmin': 1vmin, 'vmax': 1vmax);\r\n\r\n  @if not index(map-keys($units), $unit) {\r\n    $_: im-log('Invalid unit `#{$unit}`.');\r\n  }\r\n\r\n  @return $value * map-get($units, $unit);\r\n}\r\n\r\n///\r\n/// This mixin aims at redefining the configuration just for the scope of\r\n/// the call. It is helpful when having a component needing an extended\r\n/// configuration such as custom breakpoints (referred to as tweakpoints)\r\n/// for instance.\r\n///\r\n/// @author Kitty Giraudel\r\n///\r\n/// @param {Map} $tweakpoints [()] - Map of tweakpoints to be merged with `$breakpoints`\r\n/// @param {Map} $tweak-media-expressions [()] - Map of tweaked media expressions to be merged with `$media-expression`\r\n///\r\n/// @example scss - Extend the global breakpoints with a tweakpoint\r\n///  @include media-context(('custom': 678px)) {\r\n///    .foo {\r\n///      @include media('>phone', '<=custom') {\r\n///       // ...\r\n///      }\r\n///    }\r\n///  }\r\n///\r\n/// @example scss - Extend the global media expressions with a custom one\r\n///  @include media-context($tweak-media-expressions: ('all': 'all')) {\r\n///    .foo {\r\n///      @include media('all', '>phone') {\r\n///       // ...\r\n///      }\r\n///    }\r\n///  }\r\n///\r\n/// @example scss - Extend both configuration maps\r\n///  @include media-context(('custom': 678px), ('all': 'all')) {\r\n///    .foo {\r\n///      @include media('all', '>phone', '<=custom') {\r\n///       // ...\r\n///      }\r\n///    }\r\n///  }\r\n///\r\n@mixin media-context($tweakpoints: (), $tweak-media-expressions: ()) {\r\n  // Save global configuration\r\n  $global-breakpoints: $breakpoints;\r\n  $global-media-expressions: $media-expressions;\r\n\r\n  // Update global configuration\r\n  $breakpoints: map-merge($breakpoints, $tweakpoints) !global;\r\n  $media-expressions: map-merge($media-expressions, $tweak-media-expressions) !global;\r\n\r\n  @content;\r\n\r\n  // Restore global configuration\r\n  $breakpoints: $global-breakpoints !global;\r\n  $media-expressions: $global-media-expressions !global;\r\n}\r\n\r\n////\r\n/// include-media public exposed API\r\n/// @author Eduardo Boucas\r\n/// @access public\r\n////\r\n\r\n\r\n///\r\n/// Generates a media query based on a list of conditions\r\n///\r\n/// @param {Arglist}   $conditions  - Media query conditions\r\n///\r\n/// @example scss - With a single set breakpoint\r\n///  @include media('>phone') { }\r\n///\r\n/// @example scss - With two set breakpoints\r\n///  @include media('>phone', '<=tablet') { }\r\n///\r\n/// @example scss - With custom values\r\n///  @include media('>=358px', '<850px') { }\r\n///\r\n/// @example scss - With set breakpoints with custom values\r\n///  @include media('>desktop', '<=1350px') { }\r\n///\r\n/// @example scss - With a static expression\r\n///  @include media('retina2x') { }\r\n///\r\n/// @example scss - Mixing everything\r\n///  @include media('>=350px', '<tablet', 'retina3x') { }\r\n///\r\n@mixin media($conditions...) {\r\n  @if ($im-media-support and length($conditions) == 0) or\r\n      (not $im-media-support and im-intercepts-static-breakpoint($conditions...)) {\r\n    @content;\r\n  } @else if ($im-media-support and length($conditions) > 0) {\r\n    @media #{unquote(parse-expression(nth($conditions, 1)))} {\r\n      // Recursive call\r\n      @include media(slice($conditions, 2)...) {\r\n        @content;\r\n      }\r\n    }\r\n  }\r\n}\r\n",".banner {\r\n\tpadding: 4rem 0;\r\n\r\n\t.container {\r\n\t\tdisplay: flex;\r\n\t\talign-items: center;\r\n\t\tflex-wrap: wrap;\r\n\t}\r\n\r\n\t.col {\r\n\t\twidth: 100%;\r\n\r\n\t\t@include media(\">tablet\") {\r\n\t\t\twidth: 50%;\r\n\t\t}\r\n\r\n\t\t&.col-center {\r\n\t\t\tdisplay: flex;\r\n\t\t\tjustify-content: center;\r\n\t\t}\r\n\t}\r\n\r\n\t.btn {\r\n\t\twidth: 50%;\r\n\t}\r\n\r\n\t.img-holder {\r\n\t\tposition: relative;\r\n\r\n\t\t@include media(\"<tablet\") {\r\n\t\t\tmargin-top: 5rem;\r\n\t\t}\r\n\r\n\t\t@include media(\">tablet\") {\r\n\t\t\twidth: 40rem;\r\n\t\t\theight: 40rem;\r\n\t\t}\r\n\r\n\t\timg {\r\n\t\t\twidth: 100%;\r\n\t\t\theight: 100%;\r\n\t\t\tobject-fit: cover;\r\n\t\t}\r\n\r\n\t\t&.show {\r\n\t\t\t.desc-img {\r\n\t\t\t\topacity: 1;\r\n\t\t\t\tvisibility: visible;\r\n\t\t\t\tpointer-events: all;\r\n\t\t\t\ttransition: $transition;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t.desc-img {\r\n\t\t\tposition: absolute;\r\n\t\t\ttop: 0;\r\n\t\t\tleft: 0;\r\n\t\t\twidth: 100%;\r\n\t\t\theight: 100%;\r\n\t\t\tpadding: 2rem;\r\n\t\t\tbackground: rgba($white, 0.5);\r\n\t\t\topacity: 0;\r\n\t\t\tvisibility: hidden;\r\n\t\t\tpointer-events: none;\r\n\t\t\ttransition: $transition;\r\n\r\n\t\t\tp {\r\n\t\t\t\tmargin: 0 0 1rem 0;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n",".btn {\r\n\tdisplay: inline-flex;\r\n\tjustify-content: center;\r\n\tpadding: 1rem 2rem;\r\n\tcolor: $white;\r\n\tbackground: $blue;\r\n\tborder-radius: 0.5rem;\r\n\tborder: 0.1rem solid $blue;\r\n\r\n\t&:hover {\r\n\t\ttext-decoration: none;\r\n\t\tcolor: $blue;\r\n\t\tbackground: $white;\r\n\t\tborder: 0.1rem solid $blue;\r\n\t}\r\n}\r\n"]}