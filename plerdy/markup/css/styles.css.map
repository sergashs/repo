{"version":3,"sources":["_reset.scss","styles.css","_vars.scss","_header.scss","_include-media.scss","_btn.scss","_intro-section.scss"],"names":[],"mappings":"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","file":"styles.css","sourcesContent":["html {\n\tfont-size: 10px;\n}\n\n*,\n*:before,\n*:after {\n\tbox-sizing: border-box;\n}\n\nbody {\n\tmargin: 0;\n\tmin-width: 320px;\n\tbackground: $body-bg;\n\tcolor: $text-color-base;\n\tfont: $font-weight-base #{$font-size-base}/ $line-height-base $font-family-base;\n\tfont-smoothing: antialiased;\n\ttext-rendering: optimizeLegibility;\n\t-webkit-font-smoothing: antialiased;\n\t-moz-osx-font-smoothing: grayscale;\n\tdisplay: flex;\n\tflex-direction: column;\n}\n\na {\n\ttext-decoration: none;\n\tcolor: $links-color-base;\n\ttransition: $transition;\n}\n\na:hover {\n\ttext-decoration: underline;\n}\n\nbutton,\ninput[type=\"search\"],\ninput[type=\"button\"],\ninput[type=\"reset\"],\ninput[type=\"submit\"] {\n\t-webkit-appearance: none;\n\tcursor: pointer;\n\ttransition: $transition;\n}\n\nbutton::-moz-focus-inner,\ninput[type=\"reset\"]::-moz-focus-inner,\ninput[type=\"button\"]::-moz-focus-inner,\ninput[type=\"submit\"]::-moz-focus-inner {\n\tborder: none;\n\tpadding: 0;\n}\n\n.wrapper {\n\tmin-height: 100vh;\n\tmin-height: calc(var(--vh, 1vh) * 100);\n\tdisplay: flex;\n\tflex-direction: column;\n}\n\n#main {\n\tdisplay: flex;\n\tflex-direction: column;\n\tflex-grow: 1;\n}\n\np {\n\tmargin-top: 0;\n}\n\nh1,\nh2,\nh3,\nh4,\nh5 {\n\tmargin-top: 0;\n}\n\n.container {\n\tmax-width: 125.5rem;\n\tmargin: auto;\n\tpadding-left: 1rem;\n\tpadding-right: 1rem;\n}\n\n.sr-only {\n\tposition: absolute !important;\n\twidth: 1px !important;\n\theight: 1px !important;\n\tpadding: 0 !important;\n\tmargin: -1px !important;\n\toverflow: hidden !important;\n\tclip: rect(0, 0, 0, 0) !important;\n\twhite-space: nowrap !important;\n\tborder: 0 !important;\n}\n\n.home-page {\n\tpadding-top: 11.7rem;\n}\n\n.h1 {\n\tfont-weight: 600;\n\tfont-size: 4rem;\n\tline-height: 1.2;\n\tletter-spacing: 0.02em;\n}\n","html {\n\tfont-size: 10px;\n}\n\n*,\n*:before,\n*:after {\n\tbox-sizing: border-box;\n}\n\nbody {\n\tmargin: 0;\n\tmin-width: 320px;\n\tbackground: white;\n\tcolor: #001e41;\n\tfont: 400 1.4rem/1.5 \"Roboto\", sans-serif;\n\tfont-smoothing: antialiased;\n\ttext-rendering: optimizeLegibility;\n\t-webkit-font-smoothing: antialiased;\n\t-moz-osx-font-smoothing: grayscale;\n\tdisplay: flex;\n\tflex-direction: column;\n}\n\na {\n\ttext-decoration: none;\n\tcolor: inherit;\n\ttransition: all 0.3s ease;\n}\n\na:hover {\n\ttext-decoration: underline;\n}\n\nbutton,\ninput[type=search],\ninput[type=button],\ninput[type=reset],\ninput[type=submit] {\n\t-webkit-appearance: none;\n\tcursor: pointer;\n\ttransition: all 0.3s ease;\n}\n\nbutton::-moz-focus-inner,\ninput[type=reset]::-moz-focus-inner,\ninput[type=button]::-moz-focus-inner,\ninput[type=submit]::-moz-focus-inner {\n\tborder: none;\n\tpadding: 0;\n}\n\n.wrapper {\n\tmin-height: 100vh;\n\tmin-height: calc(var(--vh, 1vh) * 100);\n\tdisplay: flex;\n\tflex-direction: column;\n}\n\n#main {\n\tdisplay: flex;\n\tflex-direction: column;\n\tflex-grow: 1;\n}\n\np {\n\tmargin-top: 0;\n}\n\nh1,\nh2,\nh3,\nh4,\nh5 {\n\tmargin-top: 0;\n}\n\n.container {\n\tmax-width: 125.5rem;\n\tmargin: auto;\n\tpadding-left: 1rem;\n\tpadding-right: 1rem;\n}\n\n.sr-only {\n\tposition: absolute !important;\n\twidth: 1px !important;\n\theight: 1px !important;\n\tpadding: 0 !important;\n\tmargin: -1px !important;\n\toverflow: hidden !important;\n\tclip: rect(0, 0, 0, 0) !important;\n\twhite-space: nowrap !important;\n\tborder: 0 !important;\n}\n\n.home-page {\n\tpadding-top: 11.7rem;\n}\n\n.h1 {\n\tfont-weight: 600;\n\tfont-size: 4rem;\n\tline-height: 1.2;\n\tletter-spacing: 0.02em;\n}\n\n/* header */\n#header {\n\tposition: fixed;\n\ttop: 0;\n\tleft: 0;\n\twidth: 100%;\n\tpadding-top: 1.8rem;\n\tpadding-bottom: 1.8rem;\n\tz-index: 100;\n\tbackground: white;\n\tborder-bottom: 1px solid #e5e5e5;\n}\n#header .logo {\n\tdisplay: inline-flex;\n\twidth: 100%;\n\tmax-width: 14rem;\n}\n@media (min-width: 993px) {\n\t#header .logo {\n\t\tmargin-right: 6.1rem;\n\t}\n}\n@media (max-width: 767px) {\n\t#header .logo {\n\t\tmax-width: 8.9rem;\n\t}\n}\n#header .logo img {\n\twidth: 100%;\n\theight: auto;\n}\n#header .row {\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: space-between;\n}\n#header .row .col:last-child {\n\tdisplay: flex;\n\tflex: 1;\n\talign-items: center;\n}\n@media (max-width: 991px) {\n\t#header .row .col:last-child {\n\t\tjustify-content: flex-end;\n\t}\n}\n#header .nav {\n\tflex: 1;\n\ttransition: all 0.3s ease;\n}\n@media (max-width: 991px) {\n\t#header .nav {\n\t\tposition: fixed;\n\t\ttop: 0;\n\t\tleft: 0;\n\t\twidth: 100%;\n\t\theight: 100%;\n\t\topacity: 0;\n\t\tvisibility: hidden;\n\t\tpointer-events: none;\n\t\tbackground: white;\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\talign-items: center;\n\t\tjustify-content: center;\n\t}\n}\n@media (min-width: 993px) {\n\t#header .nav .inner-holder {\n\t\tdisplay: flex;\n\t\tjustify-content: space-between;\n\t\talign-items: center;\n\t}\n}\n@media (max-width: 991px) {\n\t#header .nav .inner-holder {\n\t\toverflow: auto;\n\t\twidth: 100%;\n\t\tpadding: 3rem 0;\n\t}\n}\n#header .nav .menu {\n\tmargin: 0;\n\tpadding: 0;\n\tlist-style: none;\n\tfont-weight: 500;\n\tfont-size: 1.8rem;\n\tcolor: #7d7d7d;\n}\n@media (min-width: 993px) {\n\t#header .nav .menu {\n\t\tdisplay: flex;\n\t\tflex-wrap: wrap;\n\t\tmargin: auto;\n\t}\n}\n@media (max-width: 991px) {\n\t#header .nav .menu {\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\talign-items: center;\n\t}\n}\n@media (min-width: 993px) {\n\t#header .nav .menu .menu-item:not(:last-child) {\n\t\tmargin-right: 3rem;\n\t}\n}\n@media (max-width: 991px) {\n\t#header .nav .menu .menu-item {\n\t\tmargin-bottom: 3rem;\n\t}\n}\n@media (max-width: 991px) {\n\t.menu-opened #header .nav {\n\t\topacity: 1;\n\t\tvisibility: visible;\n\t\tpointer-events: all;\n\t}\n}\n#header .btns-holder {\n\tdisplay: flex;\n}\n@media (max-width: 991px) {\n\t#header .btns-holder {\n\t\tflex-direction: column;\n\t\talign-items: center;\n\t}\n}\n@media (min-width: 993px) {\n\t#header .btns-holder .btn:first-child {\n\t\tmargin-right: 2.2rem;\n\t}\n}\n@media (max-width: 991px) {\n\t#header .btns-holder .btn:first-child {\n\t\tmargin-bottom: 1rem;\n\t}\n}\n#header .open-menu {\n\tposition: relative;\n\twidth: 3rem;\n\theight: 3rem;\n\tdisplay: block;\n\tfont-size: 0;\n\tline-height: 0;\n}\n@media (min-width: 993px) {\n\t#header .open-menu {\n\t\tdisplay: none;\n\t}\n}\n#header .open-menu span {\n\tposition: absolute;\n\ttop: 50%;\n\tleft: 0;\n\twidth: 100%;\n\tbackground: #001e41;\n\tborder: 0.2rem solid;\n\tborder-radius: 0.2rem;\n\theight: 0;\n\ttransition: all 0.3s ease;\n}\n#header .open-menu span:nth-child(1) {\n\tmargin-top: -1rem;\n}\n#header .open-menu span:nth-child(3) {\n\tmargin-top: 1rem;\n}\n.menu-opened #header .open-menu span:nth-child(1) {\n\tmargin-top: 0;\n\ttransform: rotate(45deg);\n}\n.menu-opened #header .open-menu span:nth-child(2) {\n\topacity: 0;\n\ttransform: translateX(50%);\n}\n.menu-opened #header .open-menu span:nth-child(3) {\n\tmargin-top: 0;\n\ttransform: rotate(-45deg);\n}\n\n.btn {\n\tdisplay: inline-block;\n\tfont-weight: 400;\n\tfont-size: 1.8rem;\n\tline-height: 1;\n\tpadding: 1.2rem 1.9rem;\n}\n.btn-link {\n\tcolor: #5d78ff;\n}\n.btn-primary {\n\tcolor: #ffffff;\n\tbackground: #5d78ff;\n\tborder-radius: 0.8rem;\n\tborder: none;\n}\n.btn-primary:hover {\n\tbackground: #778dff;\n\ttext-decoration: none;\n}\n\n@media (min-width: 993px) {\n\t.intro-section .row {\n\t\tdisplay: flex;\n\t\tjustify-content: space-between;\n\t}\n}\n@media (min-width: 993px) {\n\t.intro-section .row .col:first-child {\n\t\twidth: 80%;\n\t\tpadding-top: 2.7rem;\n\t}\n}\n.intro-section .row .col:last-child {\n\tdisplay: flex;\n}\n@media (min-width: 993px) {\n\t.intro-section .row .col:last-child {\n\t\tmax-width: 41rem;\n\t\twidth: 100%;\n\t\talign-items: center;\n\t}\n}\n@media (max-width: 991px) {\n\t.intro-section .row .col:last-child {\n\t\tjustify-content: center;\n\t}\n}\n.intro-section .inner-holder {\n\tpadding: 5.3rem 6.4rem 3.5rem 5.1rem;\n\tbackground: #e2f2ff;\n\tborder-radius: 1rem;\n}\n.intro-section .h1 {\n\tmax-width: 61.1rem;\n}\n.intro-section .text-holder {\n\tmargin-bottom: 0.6rem;\n\tmax-width: 66.5rem;\n\tfont-size: 1.6rem;\n\tline-height: 1.5;\n\tletter-spacing: 0.005em;\n}\n.intro-section .text-holder.silver-text {\n\tmargin-bottom: 1.6rem;\n\tfont-size: 1.4rem;\n\tcolor: #919191;\n}\n.intro-section .text-holder p {\n\tmargin-bottom: 0;\n}\n.intro-section .btn {\n\tmargin-bottom: 5.9rem;\n}\n.intro-section .partners {\n\tdisplay: flex;\n\tflex-wrap: wrap;\n\tmargin: 0;\n\tpadding: 0;\n\tlist-style: none;\n}\n@media (max-width: 991px) {\n\t.intro-section .partners {\n\t\tmargin-bottom: 3.3rem;\n\t}\n}\n.intro-section .partners .list-item {\n\tmargin-bottom: 1rem;\n}\n.intro-section .partners .list-item:not(:last-child) {\n\tmargin-right: 2.4rem;\n}\n.intro-section .partners .list-link:hover {\n\topacity: 0.7;\n}\n.intro-section .img-holder {\n\tposition: relative;\n\tmax-width: 37rem;\n\twidth: 100%;\n}\n@media (min-width: 993px) {\n\t.intro-section .img-holder {\n\t\tmargin-left: auto;\n\t}\n}\n.intro-section .img-holder img {\n\twidth: 100%;\n\theight: auto;\n}\n.intro-section .img-holder > img {\n\tborder-radius: 1.8rem;\n}\n.intro-section .img-holder .chart {\n\tposition: absolute;\n}\n.intro-section .img-holder .chart.chart-1 {\n\ttop: -7%;\n\tleft: -15%;\n\twidth: 52%;\n\ttransform: rotate(-1.2deg);\n}\n.intro-section .img-holder .chart.chart-1 img {\n\tbox-shadow: 0px 3.59414px 17.9707px rgba(0, 0, 0, 0.08);\n\tborder-radius: 0.8rem;\n}\n.intro-section .img-holder .chart.chart-2 {\n\ttop: 12%;\n\tright: -16%;\n\twidth: 44%;\n\ttransform: rotate(5.6deg);\n}\n.intro-section .img-holder .chart.chart-2 img {\n\tborder-radius: 0.3rem;\n\tbox-shadow: 0px 3.87995px 19.3997px rgba(0, 0, 0, 0.12);\n}\n.intro-section .img-holder .chart.chart-3 {\n\tbottom: 27%;\n\tleft: -26%;\n\twidth: 45%;\n\ttransform: rotate(-6.7deg);\n}\n.intro-section .img-holder .chart.chart-3 img {\n\tborder-radius: 0.63rem;\n\tbox-shadow: 0px 4.91924px 24.5962px rgba(0, 0, 0, 0.12);\n}","// fonts\r\n$main-font: \"Roboto\", sans-serif;\r\n\r\n// breakpoints\r\n$breakpoints: (\r\n\tsm: 576px,\r\n\tmd: 768px,\r\n\tlg: 992px,\r\n\txl: 1200px\r\n);\r\n\r\n// base vars\r\n$btn-primary-bg: #5d78ff;\r\n$text-color-base: #001e41;\r\n$body-bg: white;\r\n$font-family-base: $main-font;\r\n$font-size-base: 1.4rem;\r\n$font-weight-base: 400;\r\n$line-height-base: 1.5;\r\n$links-color-base: inherit;\r\n$headings-font-weight: 400;\r\n$transition: all 0.3s ease;\r\n\r\n// dev2\r\n// dev3\r\n// dev4\r\n","/* header */\n#header {\n\tposition: fixed;\n\ttop: 0;\n\tleft: 0;\n\twidth: 100%;\n\tpadding-top: 1.8rem;\n\tpadding-bottom: 1.8rem;\n\tz-index: 100;\n\tbackground: white;\n\tborder-bottom: 1px solid #e5e5e5;\n\n\t.logo {\n\t\tdisplay: inline-flex;\n\t\twidth: 100%;\n\t\tmax-width: 14rem;\n\n\t\t@include media(\">lg\") {\n\t\t\tmargin-right: 6.1rem;\n\t\t}\n\n\t\t@include media(\"<md\") {\n\t\t\tmax-width: 8.9rem;\n\t\t}\n\n\t\timg {\n\t\t\twidth: 100%;\n\t\t\theight: auto;\n\t\t}\n\t}\n\n\t.row {\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tjustify-content: space-between;\n\n\t\t.col {\n\t\t\t&:last-child {\n\t\t\t\tdisplay: flex;\n\t\t\t\tflex: 1;\n\t\t\t\talign-items: center;\n\n\t\t\t\t@include media(\"<lg\") {\n\t\t\t\t\tjustify-content: flex-end;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t.nav {\n\t\tflex: 1;\n\t\ttransition: $transition;\n\n\t\t@include media(\"<lg\") {\n\t\t\tposition: fixed;\n\t\t\ttop: 0;\n\t\t\tleft: 0;\n\t\t\twidth: 100%;\n\t\t\theight: 100%;\n\t\t\topacity: 0;\n\t\t\tvisibility: hidden;\n\t\t\tpointer-events: none;\n\t\t\tbackground: white;\n\t\t\tdisplay: flex;\n\t\t\tflex-direction: column;\n\t\t\talign-items: center;\n\t\t\tjustify-content: center;\n\t\t}\n\n\t\t.inner-holder {\n\t\t\t@include media(\">lg\") {\n\t\t\t\tdisplay: flex;\n\t\t\t\tjustify-content: space-between;\n\t\t\t\talign-items: center;\n\t\t\t}\n\n\t\t\t@include media(\"<lg\") {\n\t\t\t\toverflow: auto;\n\t\t\t\twidth: 100%;\n\t\t\t\tpadding: 3rem 0;\n\t\t\t}\n\t\t}\n\n\t\t.menu {\n\t\t\tmargin: 0;\n\t\t\tpadding: 0;\n\t\t\tlist-style: none;\n\t\t\tfont-weight: 500;\n\t\t\tfont-size: 1.8rem;\n\t\t\tcolor: #7d7d7d;\n\n\t\t\t@include media(\">lg\") {\n\t\t\t\tdisplay: flex;\n\t\t\t\tflex-wrap: wrap;\n\t\t\t\tmargin: auto;\n\t\t\t}\n\n\t\t\t@include media(\"<lg\") {\n\t\t\t\tdisplay: flex;\n\t\t\t\tflex-direction: column;\n\t\t\t\talign-items: center;\n\t\t\t}\n\n\t\t\t.menu-item {\n\t\t\t\t&:not(:last-child) {\n\t\t\t\t\t@include media(\">lg\") {\n\t\t\t\t\t\tmargin-right: 3rem;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t@include media(\"<lg\") {\n\t\t\t\t\tmargin-bottom: 3rem;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t.menu-opened & {\n\t\t\t@include media(\"<lg\") {\n\t\t\t\topacity: 1;\n\t\t\t\tvisibility: visible;\n\t\t\t\tpointer-events: all;\n\t\t\t}\n\t\t}\n\t}\n\n\t.btns-holder {\n\t\tdisplay: flex;\n\n\t\t@include media(\"<lg\") {\n\t\t\tflex-direction: column;\n\t\t\talign-items: center;\n\t\t}\n\n\t\t.btn {\n\t\t\t&:first-child {\n\t\t\t\t@include media(\">lg\") {\n\t\t\t\t\tmargin-right: 2.2rem;\n\t\t\t\t}\n\n\t\t\t\t@include media(\"<lg\") {\n\t\t\t\t\tmargin-bottom: 1rem;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t.open-menu {\n\t\tposition: relative;\n\t\twidth: 3rem;\n\t\theight: 3rem;\n\t\tdisplay: block;\n\t\tfont-size: 0;\n\t\tline-height: 0;\n\n\t\t@include media(\">lg\") {\n\t\t\tdisplay: none;\n\t\t}\n\n\t\tspan {\n\t\t\tposition: absolute;\n\t\t\ttop: 50%;\n\t\t\tleft: 0;\n\t\t\twidth: 100%;\n\t\t\tbackground: $text-color-base;\n\t\t\tborder: 0.2rem solid;\n\t\t\tborder-radius: 0.2rem;\n\t\t\theight: 0;\n\t\t\ttransition: $transition;\n\n\t\t\t@for $i from 1 through 3 {\n\t\t\t\t&:nth-child(#{$i}) {\n\t\t\t\t\t@if ($i == 1) {\n\t\t\t\t\t\tmargin-top: -1rem;\n\t\t\t\t\t}\n\t\t\t\t\t@if ($i == 3) {\n\t\t\t\t\t\tmargin-top: 1rem;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t.menu-opened & {\n\t\t\t\t@for $i from 1 through 3 {\n\t\t\t\t\t&:nth-child(#{$i}) {\n\t\t\t\t\t\t@if ($i == 1) {\n\t\t\t\t\t\t\tmargin-top: 0;\n\t\t\t\t\t\t\ttransform: rotate(45deg);\n\t\t\t\t\t\t}\n\t\t\t\t\t\t@if ($i == 2) {\n\t\t\t\t\t\t\topacity: 0;\n\t\t\t\t\t\t\ttransform: translateX(50%);\n\t\t\t\t\t\t}\n\t\t\t\t\t\t@if ($i == 3) {\n\t\t\t\t\t\t\tmargin-top: 0;\n\t\t\t\t\t\t\ttransform: rotate(-45deg);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n","@charset \"UTF-8\";\r\n\r\n//     _            _           _                           _ _\r\n//    (_)          | |         | |                         | (_)\r\n//     _ _ __   ___| |_   _  __| | ___   _ __ ___   ___  __| |_  __ _\r\n//    | | '_ \\ / __| | | | |/ _` |/ _ \\ | '_ ` _ \\ / _ \\/ _` | |/ _` |\r\n//    | | | | | (__| | |_| | (_| |  __/ | | | | | |  __/ (_| | | (_| |\r\n//    |_|_| |_|\\___|_|\\__,_|\\__,_|\\___| |_| |_| |_|\\___|\\__,_|_|\\__,_|\r\n//\r\n//      Simple, elegant and maintainable media queries in Sass\r\n//                        v1.4.9\r\n//\r\n//        https://eduardoboucas.github.io/include-media\r\n//\r\n//         Authors: Eduardo Boucas (@eduardoboucas)\r\n//                  Kitty Giraudel (@kittygiraudel)\r\n//\r\n//      This project is licensed under the terms of the MIT license\r\n////\r\n/// include-media library public configuration\r\n/// @author Eduardo Boucas\r\n/// @access public\r\n////\r\n\r\n\r\n///\r\n/// Creates a list of global breakpoints\r\n///\r\n/// @example scss - Creates a single breakpoint with the label `phone`\r\n///  $breakpoints: ('phone': 320px);\r\n///\r\n$breakpoints: (\r\n  'phone': 320px,\r\n  'tablet': 768px,\r\n  'desktop': 1024px\r\n) !default;\r\n\r\n\r\n///\r\n/// Creates a list of static expressions or media types\r\n///\r\n/// @example scss - Creates a single media type (screen)\r\n///  $media-expressions: ('screen': 'screen');\r\n///\r\n/// @example scss - Creates a static expression with logical disjunction (OR operator)\r\n///  $media-expressions: (\r\n///    'retina2x': '(-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi)'\r\n///  );\r\n///\r\n$media-expressions: (\r\n  'screen': 'screen',\r\n  'print': 'print',\r\n  'handheld': 'handheld',\r\n  'landscape': '(orientation: landscape)',\r\n  'portrait': '(orientation: portrait)',\r\n  'retina2x': '(-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi), (min-resolution: 2dppx)',\r\n  'retina3x': '(-webkit-min-device-pixel-ratio: 3), (min-resolution: 350dpi), (min-resolution: 3dppx)'\r\n) !default;\r\n\r\n\r\n///\r\n/// Defines a number to be added or subtracted from each unit when declaring breakpoints with exclusive intervals\r\n///\r\n/// @example scss - Interval for pixels is defined as `1` by default\r\n///  @include media('>128px') {}\r\n///\r\n///  /* Generates: */\r\n///  @media (min-width: 129px) {}\r\n///\r\n/// @example scss - Interval for ems is defined as `0.01` by default\r\n///  @include media('>20em') {}\r\n///\r\n///  /* Generates: */\r\n///  @media (min-width: 20.01em) {}\r\n///\r\n/// @example scss - Interval for rems is defined as `0.1` by default, to be used with `font-size: 62.5%;`\r\n///  @include media('>2.0rem') {}\r\n///\r\n///  /* Generates: */\r\n///  @media (min-width: 2.1rem) {}\r\n///\r\n$unit-intervals: (\r\n  'px': 1,\r\n  'em': 0.01,\r\n  'rem': 0.1,\r\n  '': 0\r\n) !default;\r\n\r\n///\r\n/// Defines whether support for media queries is available, useful for creating separate stylesheets\r\n/// for browsers that don't support media queries.\r\n///\r\n/// @example scss - Disables support for media queries\r\n///  $im-media-support: false;\r\n///  @include media('>=tablet') {\r\n///    .foo {\r\n///      color: tomato;\r\n///    }\r\n///  }\r\n///\r\n///  /* Generates: */\r\n///  .foo {\r\n///    color: tomato;\r\n///  }\r\n///\r\n$im-media-support: true !default;\r\n\r\n///\r\n/// Selects which breakpoint to emulate when support for media queries is disabled. Media queries that start at or\r\n/// intercept the breakpoint will be displayed, any others will be ignored.\r\n///\r\n/// @example scss - This media query will show because it intercepts the static breakpoint\r\n///  $im-media-support: false;\r\n///  $im-no-media-breakpoint: 'desktop';\r\n///  @include media('>=tablet') {\r\n///    .foo {\r\n///      color: tomato;\r\n///    }\r\n///  }\r\n///\r\n///  /* Generates: */\r\n///  .foo {\r\n///    color: tomato;\r\n///  }\r\n///\r\n/// @example scss - This media query will NOT show because it does not intercept the desktop breakpoint\r\n///  $im-media-support: false;\r\n///  $im-no-media-breakpoint: 'tablet';\r\n///  @include media('>=desktop') {\r\n///    .foo {\r\n///      color: tomato;\r\n///    }\r\n///  }\r\n///\r\n///  /* No output */\r\n///\r\n$im-no-media-breakpoint: 'desktop' !default;\r\n\r\n///\r\n/// Selects which media expressions are allowed in an expression for it to be used when media queries\r\n/// are not supported.\r\n///\r\n/// @example scss - This media query will show because it intercepts the static breakpoint and contains only accepted media expressions\r\n///  $im-media-support: false;\r\n///  $im-no-media-breakpoint: 'desktop';\r\n///  $im-no-media-expressions: ('screen');\r\n///  @include media('>=tablet', 'screen') {\r\n///    .foo {\r\n///      color: tomato;\r\n///    }\r\n///  }\r\n///\r\n///   /* Generates: */\r\n///   .foo {\r\n///     color: tomato;\r\n///   }\r\n///\r\n/// @example scss - This media query will NOT show because it intercepts the static breakpoint but contains a media expression that is not accepted\r\n///  $im-media-support: false;\r\n///  $im-no-media-breakpoint: 'desktop';\r\n///  $im-no-media-expressions: ('screen');\r\n///  @include media('>=tablet', 'retina2x') {\r\n///    .foo {\r\n///      color: tomato;\r\n///    }\r\n///  }\r\n///\r\n///  /* No output */\r\n///\r\n$im-no-media-expressions: ('screen', 'portrait', 'landscape') !default;\r\n\r\n////\r\n/// Cross-engine logging engine\r\n/// @author Kitty Giraudel\r\n/// @access private\r\n////\r\n\r\n\r\n///\r\n/// Log a message either with `@error` if supported\r\n/// else with `@warn`, using `feature-exists('at-error')`\r\n/// to detect support.\r\n///\r\n/// @param {String} $message - Message to log\r\n///\r\n@function im-log($message) {\r\n  @if feature-exists('at-error') {\r\n    @error $message;\r\n  } @else {\r\n    @warn $message;\r\n    $_: noop();\r\n  }\r\n\r\n  @return $message;\r\n}\r\n\r\n\r\n///\r\n/// Wrapper mixin for the log function so it can be used with a more friendly\r\n/// API than `@if im-log('..') {}` or `$_: im-log('..')`. Basically, use the function\r\n/// within functions because it is not possible to include a mixin in a function\r\n/// and use the mixin everywhere else because it's much more elegant.\r\n///\r\n/// @param {String} $message - Message to log\r\n///\r\n@mixin log($message) {\r\n  @if im-log($message) {}\r\n}\r\n\r\n\r\n///\r\n/// Function with no `@return` called next to `@warn` in Sass 3.3\r\n/// to trigger a compiling error and stop the process.\r\n///\r\n@function noop() {}\r\n\r\n///\r\n/// Determines whether a list of conditions is intercepted by the static breakpoint.\r\n///\r\n/// @param {Arglist}   $conditions  - Media query conditions\r\n///\r\n/// @return {Boolean} - Returns true if the conditions are intercepted by the static breakpoint\r\n///\r\n@function im-intercepts-static-breakpoint($conditions...) {\r\n  $no-media-breakpoint-value: map-get($breakpoints, $im-no-media-breakpoint);\r\n\r\n  @if not $no-media-breakpoint-value {\r\n    @if im-log('`#{$im-no-media-breakpoint}` is not a valid breakpoint.') {}\r\n  }\r\n\r\n  @each $condition in $conditions {\r\n    @if not map-has-key($media-expressions, $condition) {\r\n      $operator: get-expression-operator($condition);\r\n      $prefix: get-expression-prefix($operator);\r\n      $value: get-expression-value($condition, $operator);\r\n\r\n      @if ($prefix == 'max' and $value <= $no-media-breakpoint-value) or\r\n          ($prefix == 'min' and $value > $no-media-breakpoint-value) {\r\n        @return false;\r\n      }\r\n    } @else if not index($im-no-media-expressions, $condition) {\r\n      @return false;\r\n    }\r\n  }\r\n\r\n  @return true;\r\n}\r\n\r\n////\r\n/// Parsing engine\r\n/// @author Kitty Giraudel\r\n/// @access private\r\n////\r\n\r\n\r\n///\r\n/// Get operator of an expression\r\n///\r\n/// @param {String} $expression - Expression to extract operator from\r\n///\r\n/// @return {String} - Any of `>=`, `>`, `<=`, `<`, `≥`, `≤`\r\n///\r\n@function get-expression-operator($expression) {\r\n  @each $operator in ('>=', '>', '<=', '<', '≥', '≤') {\r\n    @if str-index($expression, $operator) {\r\n      @return $operator;\r\n    }\r\n  }\r\n\r\n  // It is not possible to include a mixin inside a function, so we have to\r\n  // rely on the `im-log(..)` function rather than the `log(..)` mixin. Because\r\n  // functions cannot be called anywhere in Sass, we need to hack the call in\r\n  // a dummy variable, such as `$_`. If anybody ever raise a scoping issue with\r\n  // Sass 3.3, change this line in `@if im-log(..) {}` instead.\r\n  $_: im-log('No operator found in `#{$expression}`.');\r\n}\r\n\r\n\r\n///\r\n/// Get dimension of an expression, based on a found operator\r\n///\r\n/// @param {String} $expression - Expression to extract dimension from\r\n/// @param {String} $operator - Operator from `$expression`\r\n///\r\n/// @return {String} - `width` or `height` (or potentially anything else)\r\n///\r\n@function get-expression-dimension($expression, $operator) {\r\n  $operator-index: str-index($expression, $operator);\r\n  $parsed-dimension: str-slice($expression, 0, $operator-index - 1);\r\n  $dimension: 'width';\r\n\r\n  @if str-length($parsed-dimension) > 0 {\r\n    $dimension: $parsed-dimension;\r\n  }\r\n\r\n  @return $dimension;\r\n}\r\n\r\n\r\n///\r\n/// Get dimension prefix based on an operator\r\n///\r\n/// @param {String} $operator - Operator\r\n///\r\n/// @return {String} - `min` or `max`\r\n///\r\n@function get-expression-prefix($operator) {\r\n  @return if(index(('<', '<=', '≤'), $operator), 'max', 'min');\r\n}\r\n\r\n\r\n///\r\n/// Get value of an expression, based on a found operator\r\n///\r\n/// @param {String} $expression - Expression to extract value from\r\n/// @param {String} $operator - Operator from `$expression`\r\n///\r\n/// @return {Number} - A numeric value\r\n///\r\n@function get-expression-value($expression, $operator) {\r\n  $operator-index: str-index($expression, $operator);\r\n  $value: str-slice($expression, $operator-index + str-length($operator));\r\n\r\n  @if map-has-key($breakpoints, $value) {\r\n    $value: map-get($breakpoints, $value);\r\n  } @else {\r\n    $value: to-number($value);\r\n  }\r\n\r\n  $interval: map-get($unit-intervals, unit($value));\r\n\r\n  @if not $interval {\r\n    // It is not possible to include a mixin inside a function, so we have to\r\n    // rely on the `im-log(..)` function rather than the `log(..)` mixin. Because\r\n    // functions cannot be called anywhere in Sass, we need to hack the call in\r\n    // a dummy variable, such as `$_`. If anybody ever raise a scoping issue with\r\n    // Sass 3.3, change this line in `@if im-log(..) {}` instead.\r\n    $_: im-log('Unknown unit `#{unit($value)}`.');\r\n  }\r\n\r\n  @if $operator == '>' {\r\n    $value: $value + $interval;\r\n  } @else if $operator == '<' {\r\n    $value: $value - $interval;\r\n  }\r\n\r\n  @return $value;\r\n}\r\n\r\n\r\n///\r\n/// Parse an expression to return a valid media-query expression\r\n///\r\n/// @param {String} $expression - Expression to parse\r\n///\r\n/// @return {String} - Valid media query\r\n///\r\n@function parse-expression($expression) {\r\n  // If it is part of $media-expressions, it has no operator\r\n  // then there is no need to go any further, just return the value\r\n  @if map-has-key($media-expressions, $expression) {\r\n    @return map-get($media-expressions, $expression);\r\n  }\r\n\r\n  $operator: get-expression-operator($expression);\r\n  $dimension: get-expression-dimension($expression, $operator);\r\n  $prefix: get-expression-prefix($operator);\r\n  $value: get-expression-value($expression, $operator);\r\n\r\n  @return '(#{$prefix}-#{$dimension}: #{$value})';\r\n}\r\n\r\n///\r\n/// Slice `$list` between `$start` and `$end` indexes\r\n///\r\n/// @access private\r\n///\r\n/// @param {List} $list - List to slice\r\n/// @param {Number} $start [1] - Start index\r\n/// @param {Number} $end [length($list)] - End index\r\n///\r\n/// @return {List} Sliced list\r\n///\r\n@function slice($list, $start: 1, $end: length($list)) {\r\n  @if length($list) < 1 or $start > $end {\r\n    @return ();\r\n  }\r\n\r\n  $result: ();\r\n\r\n  @for $i from $start through $end {\r\n    $result: append($result, nth($list, $i));\r\n  }\r\n\r\n  @return $result;\r\n}\r\n\r\n////\r\n/// String to number converter\r\n/// @author Kitty Giraudel\r\n/// @access private\r\n////\r\n\r\n\r\n///\r\n/// Casts a string into a number\r\n///\r\n/// @param {String | Number} $value - Value to be parsed\r\n///\r\n/// @return {Number}\r\n///\r\n@function to-number($value) {\r\n  @if type-of($value) == 'number' {\r\n    @return $value;\r\n  } @else if type-of($value) != 'string' {\r\n    $_: im-log('Value for `to-number` should be a number or a string.');\r\n  }\r\n\r\n  $first-character: str-slice($value, 1, 1);\r\n  $result: 0;\r\n  $digits: 0;\r\n  $minus: ($first-character == '-');\r\n  $numbers: ('0': 0, '1': 1, '2': 2, '3': 3, '4': 4, '5': 5, '6': 6, '7': 7, '8': 8, '9': 9);\r\n\r\n  // Remove +/- sign if present at first character\r\n  @if ($first-character == '+' or $first-character == '-') {\r\n    $value: str-slice($value, 2);\r\n  }\r\n\r\n  @for $i from 1 through str-length($value) {\r\n    $character: str-slice($value, $i, $i);\r\n\r\n    @if not (index(map-keys($numbers), $character) or $character == '.') {\r\n      @return to-length(if($minus, -$result, $result), str-slice($value, $i))\r\n    }\r\n\r\n    @if $character == '.' {\r\n      $digits: 1;\r\n    } @else if $digits == 0 {\r\n      $result: $result * 10 + map-get($numbers, $character);\r\n    } @else {\r\n      $digits: $digits * 10;\r\n      $result: $result + map-get($numbers, $character) / $digits;\r\n    }\r\n  }\r\n\r\n  @return if($minus, -$result, $result);\r\n}\r\n\r\n\r\n///\r\n/// Add `$unit` to `$value`\r\n///\r\n/// @param {Number} $value - Value to add unit to\r\n/// @param {String} $unit - String representation of the unit\r\n///\r\n/// @return {Number} - `$value` expressed in `$unit`\r\n///\r\n@function to-length($value, $unit) {\r\n  $units: ('px': 1px, 'cm': 1cm, 'mm': 1mm, '%': 1%, 'ch': 1ch, 'pc': 1pc, 'in': 1in, 'em': 1em, 'rem': 1rem, 'pt': 1pt, 'ex': 1ex, 'vw': 1vw, 'vh': 1vh, 'vmin': 1vmin, 'vmax': 1vmax);\r\n\r\n  @if not index(map-keys($units), $unit) {\r\n    $_: im-log('Invalid unit `#{$unit}`.');\r\n  }\r\n\r\n  @return $value * map-get($units, $unit);\r\n}\r\n\r\n///\r\n/// This mixin aims at redefining the configuration just for the scope of\r\n/// the call. It is helpful when having a component needing an extended\r\n/// configuration such as custom breakpoints (referred to as tweakpoints)\r\n/// for instance.\r\n///\r\n/// @author Kitty Giraudel\r\n///\r\n/// @param {Map} $tweakpoints [()] - Map of tweakpoints to be merged with `$breakpoints`\r\n/// @param {Map} $tweak-media-expressions [()] - Map of tweaked media expressions to be merged with `$media-expression`\r\n///\r\n/// @example scss - Extend the global breakpoints with a tweakpoint\r\n///  @include media-context(('custom': 678px)) {\r\n///    .foo {\r\n///      @include media('>phone', '<=custom') {\r\n///       // ...\r\n///      }\r\n///    }\r\n///  }\r\n///\r\n/// @example scss - Extend the global media expressions with a custom one\r\n///  @include media-context($tweak-media-expressions: ('all': 'all')) {\r\n///    .foo {\r\n///      @include media('all', '>phone') {\r\n///       // ...\r\n///      }\r\n///    }\r\n///  }\r\n///\r\n/// @example scss - Extend both configuration maps\r\n///  @include media-context(('custom': 678px), ('all': 'all')) {\r\n///    .foo {\r\n///      @include media('all', '>phone', '<=custom') {\r\n///       // ...\r\n///      }\r\n///    }\r\n///  }\r\n///\r\n@mixin media-context($tweakpoints: (), $tweak-media-expressions: ()) {\r\n  // Save global configuration\r\n  $global-breakpoints: $breakpoints;\r\n  $global-media-expressions: $media-expressions;\r\n\r\n  // Update global configuration\r\n  $breakpoints: map-merge($breakpoints, $tweakpoints) !global;\r\n  $media-expressions: map-merge($media-expressions, $tweak-media-expressions) !global;\r\n\r\n  @content;\r\n\r\n  // Restore global configuration\r\n  $breakpoints: $global-breakpoints !global;\r\n  $media-expressions: $global-media-expressions !global;\r\n}\r\n\r\n////\r\n/// include-media public exposed API\r\n/// @author Eduardo Boucas\r\n/// @access public\r\n////\r\n\r\n\r\n///\r\n/// Generates a media query based on a list of conditions\r\n///\r\n/// @param {Arglist}   $conditions  - Media query conditions\r\n///\r\n/// @example scss - With a single set breakpoint\r\n///  @include media('>phone') { }\r\n///\r\n/// @example scss - With two set breakpoints\r\n///  @include media('>phone', '<=tablet') { }\r\n///\r\n/// @example scss - With custom values\r\n///  @include media('>=358px', '<850px') { }\r\n///\r\n/// @example scss - With set breakpoints with custom values\r\n///  @include media('>desktop', '<=1350px') { }\r\n///\r\n/// @example scss - With a static expression\r\n///  @include media('retina2x') { }\r\n///\r\n/// @example scss - Mixing everything\r\n///  @include media('>=350px', '<tablet', 'retina3x') { }\r\n///\r\n@mixin media($conditions...) {\r\n  @if ($im-media-support and length($conditions) == 0) or\r\n      (not $im-media-support and im-intercepts-static-breakpoint($conditions...)) {\r\n    @content;\r\n  } @else if ($im-media-support and length($conditions) > 0) {\r\n    @media #{unquote(parse-expression(nth($conditions, 1)))} {\r\n      // Recursive call\r\n      @include media(slice($conditions, 2)...) {\r\n        @content;\r\n      }\r\n    }\r\n  }\r\n}\r\n",".btn {\r\n\tdisplay: inline-block;\r\n\tfont-weight: 400;\r\n\tfont-size: 1.8rem;\r\n\tline-height: 1;\r\n\tpadding: 1.2rem 1.9rem;\r\n\r\n\t&-link {\r\n\t\tcolor: $btn-primary-bg;\r\n\t}\r\n\r\n\t&-primary {\r\n\t\tcolor: #ffffff;\r\n\t\tbackground: $btn-primary-bg;\r\n\t\tborder-radius: 0.8rem;\r\n\t\tborder: none;\r\n\r\n\t\t&:hover {\r\n\t\t\tbackground: lighten($btn-primary-bg, 5);\r\n\t\t\ttext-decoration: none;\r\n\t\t}\r\n\t}\r\n}\r\n",".intro-section {\r\n\t.row {\r\n\t\t@include media(\">lg\") {\r\n\t\t\tdisplay: flex;\r\n\t\t\tjustify-content: space-between;\r\n\t\t}\r\n\r\n\t\t.col {\r\n\t\t\t&:first-child {\r\n\t\t\t\t@include media(\">lg\") {\r\n\t\t\t\t\twidth: 80%;\r\n\t\t\t\t\tpadding-top: 2.7rem;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t&:last-child {\r\n\t\t\t\tdisplay: flex;\r\n\r\n\t\t\t\t@include media(\">lg\") {\r\n\t\t\t\t\tmax-width: 41rem;\r\n\t\t\t\t\twidth: 100%;\r\n\t\t\t\t\talign-items: center;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t@include media(\"<lg\") {\r\n\t\t\t\t\tjustify-content: center;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t.inner-holder {\r\n\t\tpadding: 5.3rem 6.4rem 3.5rem 5.1rem;\r\n\t\tbackground: #e2f2ff;\r\n\t\tborder-radius: 1rem;\r\n\t}\r\n\r\n\t.h1 {\r\n\t\tmax-width: 61.1rem;\r\n\t}\r\n\r\n\t.text-holder {\r\n\t\tmargin-bottom: 0.6rem;\r\n\t\tmax-width: 66.5rem;\r\n\t\tfont-size: 1.6rem;\r\n\t\tline-height: 1.5;\r\n\t\tletter-spacing: 0.005em;\r\n\r\n\t\t&.silver-text {\r\n\t\t\tmargin-bottom: 1.6rem;\r\n\t\t\tfont-size: 1.4rem;\r\n\t\t\tcolor: #919191;\r\n\t\t}\r\n\r\n\t\tp {\r\n\t\t\tmargin-bottom: 0;\r\n\t\t}\r\n\t}\r\n\r\n\t.btn {\r\n\t\tmargin-bottom: 5.9rem;\r\n\t}\r\n\r\n\t.partners {\r\n\t\tdisplay: flex;\r\n\t\tflex-wrap: wrap;\r\n\t\tmargin: 0;\r\n\t\tpadding: 0;\r\n\t\tlist-style: none;\r\n\r\n\t\t@include media(\"<lg\") {\r\n\t\t\tmargin-bottom: 3.3rem;\r\n\t\t}\r\n\r\n\t\t.list-item {\r\n\t\t\tmargin-bottom: 1rem;\r\n\r\n\t\t\t&:not(:last-child) {\r\n\t\t\t\tmargin-right: 2.4rem;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t.list-link {\r\n\t\t\t&:hover {\r\n\t\t\t\topacity: 0.7;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t.img-holder {\r\n\t\tposition: relative;\r\n\t\tmax-width: 37rem;\r\n\t\twidth: 100%;\r\n\r\n\t\t@include media(\">lg\") {\r\n\t\t\tmargin-left: auto;\r\n\t\t}\r\n\r\n\t\timg {\r\n\t\t\twidth: 100%;\r\n\t\t\theight: auto;\r\n\t\t}\r\n\r\n\t\t> img {\r\n\t\t\tborder-radius: 1.8rem;\r\n\t\t}\r\n\r\n\t\t.chart {\r\n\t\t\tposition: absolute;\r\n\r\n\t\t\t&.chart-1 {\r\n\t\t\t\ttop: -7%;\r\n\t\t\t\tleft: -15%;\r\n\t\t\t\twidth: 52%;\r\n\t\t\t\ttransform: rotate(-1.2deg);\r\n\r\n\t\t\t\timg {\r\n\t\t\t\t\tbox-shadow: 0px 3.59414px 17.9707px rgba(0, 0, 0, 0.08);\r\n\t\t\t\t\tborder-radius: 0.8rem;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t&.chart-2 {\r\n\t\t\t\ttop: 12%;\r\n\t\t\t\tright: -16%;\r\n\t\t\t\twidth: 44%;\r\n\t\t\t\ttransform: rotate(5.6deg);\r\n\r\n\t\t\t\timg {\r\n\t\t\t\t\tborder-radius: 0.3rem;\r\n\t\t\t\t\tbox-shadow: 0px 3.87995px 19.3997px rgba(0, 0, 0, 0.12);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t&.chart-3 {\r\n\t\t\t\tbottom: 27%;\r\n\t\t\t\tleft: -26%;\r\n\t\t\t\twidth: 45%;\r\n\t\t\t\ttransform: rotate(-6.7deg);\r\n\r\n\t\t\t\timg {\r\n\t\t\t\t\tborder-radius: 0.63rem;\r\n\t\t\t\t\tbox-shadow: 0px 4.91924px 24.5962px rgba(0, 0, 0, 0.12);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n"]}